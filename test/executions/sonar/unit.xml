<?xml version="1.0" encoding="utf-8"?>
<testExecutions version="1">
    <file path="test/unit/lib/format-complaint-data.spec.js">
        <testCase name="#formatComplaintData reason immigration-application returns complaint data with type &quot;SUBMITTING_APPLICATION&quot;" duration="3"/>
        <testCase name="#formatComplaintData reason immigration-appointment returns complaint data with type &quot;MAKING_APPOINTMENT&quot;" duration="1"/>
        <testCase name="#formatComplaintData reason delays returns complaint data with type &quot;DELAYS&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason biometric-residence-permit returns complaint data with type &quot;BIOMETRIC_RESIDENCE_PERMIT&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason immigration-decision returns complaint data with type &quot;IMMIGRATION_DECISION&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason refund returns complaint data with type &quot;REFUND&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason staff-behaviour poor-information returns complaint data with type &quot;POOR_INFORMATION&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason staff-behaviour staff-behaviour returns complaint data with type &quot;POOR_STAFF_BEHAVIOUR&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason staff-behaviour invalid value throws an error if an invalid poor-info-or-behaviour value is provided" duration="0"/>
        <testCase name="#formatComplaintData reason existing-complaint returns complaint data with type &quot;EXISTING&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason other-complaint returns complaint data with type &quot;SOMETHING_ELSE&quot;" duration="0"/>
        <testCase name="#formatComplaintData reason invalid reason throws an error if an invalid reason is provided" duration="1"/>
    </file>
    <file path="test/unit/lib/json-converters/brp.spec.js">
        <testCase name="BrpComplaint problemExperienced returns &quot;CARD_INCORRECT&quot; if &quot;card-incorrect&quot; value passed in" duration="0"/>
        <testCase name="BrpComplaint problemExperienced returns &quot;CARD_NOT_ARRIVED&quot; if &quot;card-not-arrived&quot; value passed in" duration="0"/>
        <testCase name="BrpComplaint problemExperienced returns &quot;COMPLAIN_BRP&quot; if &quot;complain-brp&quot; value passed in" duration="0"/>
        <testCase name="BrpComplaint problemExperienced throws an error if invalid biometric-residence-permit is passed" duration="0"/>
    </file>
    <file path="test/unit/lib/json-converters/complaint.spec.js">
        <testCase name="Complaint Should have property complaintAttributes which is an object" duration="1"/>
        <testCase name="Complaint complaintAttributes Should have creationDate set" duration="0"/>
        <testCase name="Complaint complaintAttributes reporterDetails applicant Should return applicant details without phone number if not included" duration="0"/>
        <testCase name="Complaint complaintAttributes reporterDetails applicant Should return applicant details with phone number if included" duration="0"/>
        <testCase name="Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType RELATIVE" duration="0"/>
        <testCase name="Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType LEGAL_REP" duration="1"/>
        <testCase name="Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType SPONSOR" duration="0"/>
        <testCase name="Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType SUPPORT_ORG" duration="0"/>
        <testCase name="Complaint complaintAttributes reporterDetails agent Should return agent details with phone number if included" duration="0"/>
        <testCase name="Complaint complaintAttributes reporterDetails agent should throw error if incorrect who-representing type specified" duration="0"/>
        <testCase name="Complaint complaintAttributes reference Does not include a reference if reference-number is not present" duration="1"/>
        <testCase name="Complaint complaintAttributes reference Does not include a reference if reference-numbers is specified as &quot;none&quot;" duration="0"/>
        <testCase name="Complaint complaintAttributes reference If &quot;gwf&quot; reference, reference number will be set on GWF_REF" duration="1"/>
        <testCase name="Complaint complaintAttributes reference If &quot;ho&quot; reference, reference number will be set on HO_REF" duration="0"/>
        <testCase name="Complaint complaintAttributes reference If &quot;ihs&quot; reference, reference number will be set on IHS_REF" duration="0"/>
        <testCase name="Complaint complaintAttributes reference If &quot;uan&quot; reference, reference number will be set on UAN_REF" duration="1"/>
        <testCase name="Complaint complaintAttributes reference should throw error if incorrect ref type specified" duration="1"/>
        <testCase name="Complaint complaintAttributes complaintDetails applicationLocation If no location provided, applicationLocation is not set" duration="0"/>
        <testCase name="Complaint complaintAttributes complaintDetails applicationLocation If applied from &quot;inside-uk&quot;, applicationLocation set to INSIDE_UK" duration="0"/>
        <testCase name="Complaint complaintAttributes complaintDetails applicationLocation If applied from &quot;outside-uk&quot;, applicationLocation set to OUTSIDE_UK" duration="1"/>
        <testCase name="Complaint complaintAttributes complaintDetails applicationLocation It throws an error if invalid &quot;where-applied-from&quot;" duration="0"/>
    </file>
    <file path="test/unit/lib/json-converters/decision.spec.js">
        <testCase name="DecisionComplaint decisionOutcome returns &quot;NEGATIVE&quot; if &quot;negative&quot; decision-outcome value passed in" duration="0"/>
        <testCase name="DecisionComplaint decisionOutcome returns &quot;POSITIVE&quot; if &quot;positive&quot; decision-outcome value passed in" duration="0"/>
        <testCase name="DecisionComplaint decisionOutcome throws an error if invalid decision-outcome is passed" duration="1"/>
    </file>
    <file path="test/unit/lib/json-converters/delays.spec.js">
        <testCase name="DelaysComplaint delayedWaitingFor returns &quot;APPLICATION_DELAY&quot; if &quot;application-delay&quot; delay-type value passed in" duration="0"/>
        <testCase name="DelaysComplaint delayedWaitingFor returns &quot;RETURN_OF_DOCUMENTS&quot; if &quot;return-of-documents&quot; delay-type value passed in" duration="0"/>
        <testCase name="DelaysComplaint delayedWaitingFor throws an error if invalid delay-type is passed" duration="0"/>
        <testCase name="DelaysComplaint documentReturnRequest returns &quot;YES_OTHER&quot; if &quot;yes-other&quot; return-of-documents value passed in" duration="0"/>
        <testCase name="DelaysComplaint documentReturnRequest returns &quot;YES_DOCS_SERVICE&quot; if &quot;yes-docs-service&quot; return-of-documents value passed in" duration="1"/>
        <testCase name="DelaysComplaint documentReturnRequest returns &quot;NO&quot; if &quot;yes-docs-service&quot; return-of-documents value passed in" duration="0"/>
        <testCase name="DelaysComplaint documentReturnRequest throws an error if invalid return-of-documents is passed" duration="0"/>
    </file>
    <file path="test/unit/lib/json-converters/existing.spec.js">
        <testCase name="ExistingComplaint previousComplaint returns complaint reference number if &quot;yes&quot; existing-complaint value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint throws an error if invalid existing-complaint value is passed" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;SUBMITTING_APPLICATION&quot; if &quot;immigration-application&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;MAKING_APPOINTMENT&quot; if &quot;immigration-appointment&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;DELAYS&quot; if &quot;delays&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;BIOMETRIC_RESIDENCE_PERMIT&quot; if &quot;biometric-residence-permit&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;IMMIGRATION_DECISION&quot; if &quot;immigration-decision&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;IMMIGRATION_STATUS_CHANGE&quot; if &quot;immigration-status-change&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;REFUND&quot; if &quot;refund&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;POOR_INFORMATION_OR_STAFF_BEHAVIOUR&quot; if &quot;staff-behaviour&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType returns &quot;SOMETHING_ELSE&quot; if &quot;other-complaint&quot; complaint-reason-previous value passed in" duration="0"/>
        <testCase name="ExistingComplaint previousComplaint previousComplaintType throws an error if invalid complaint-reason-previous value is passed" duration="0"/>
    </file>
    <file path="test/unit/lib/json-converters/making-appointment.spec.js">
        <testCase name="MakingAppointmentComplaint problemExperienced returns &quot;LACK_AVAILABILITY&quot; if &quot;lack-availability&quot; immigration-appointment value passed in" duration="0"/>
        <testCase name="MakingAppointmentComplaint problemExperienced returns &quot;CHANGE_APPOINTMENT&quot; if &quot;change-appointment&quot; immigration-appointment value passed in" duration="0"/>
        <testCase name="MakingAppointmentComplaint problemExperienced returns &quot;TECHNICAL_APPOINTMENTS&quot; if &quot;technical-appointments&quot; immigration-appointment value passed in" duration="0"/>
        <testCase name="MakingAppointmentComplaint problemExperienced returns &quot;QUESTIONS_APPOINTMENTS&quot; if &quot;questions-appointments&quot; immigration-appointment value passed in" duration="1"/>
        <testCase name="MakingAppointmentComplaint problemExperienced returns &quot;COMPLAIN_APPOINTMENTS&quot; if &quot;complain-appointments&quot; immigration-appointment value passed in" duration="0"/>
        <testCase name="MakingAppointmentComplaint problemExperienced throws an error if invalid immigration-appointment is passed" duration="1"/>
    </file>
    <file path="test/unit/lib/json-converters/refund.spec.js">
        <testCase name="RefundComplaint refundRequested returns &quot;NO&quot; if &quot;no&quot; refund value passed in" duration="0"/>
        <testCase name="RefundComplaint refundRequested returns &quot;YES&quot; if &quot;yes&quot; refund value passed in" duration="0"/>
        <testCase name="RefundComplaint refundRequested returns &quot;NOT_YET&quot; if &quot;not-yet&quot; refund value passed in" duration="1"/>
        <testCase name="RefundComplaint refundRequested throws an error if invalid refund value is passed" duration="0"/>
        <testCase name="RefundComplaint refundType returns &quot;STANDARD&quot; if &quot;standard&quot; refund-type value passed in" duration="0"/>
        <testCase name="RefundComplaint refundType returns &quot;PRIORITY&quot; if &quot;priority&quot; refund-type value passed in" duration="0"/>
        <testCase name="RefundComplaint refundType returns &quot;SUPER_PRIORITY&quot; if &quot;super-priority&quot; refund-type value passed in" duration="0"/>
        <testCase name="RefundComplaint refundType returns &quot;PREMIUM&quot; if &quot;premium&quot; refund-type value passed in" duration="0"/>
        <testCase name="RefundComplaint refundType returns &quot;IHS&quot; if &quot;ihs&quot; refund-type value passed in" duration="1"/>
        <testCase name="RefundComplaint refundType returns &quot;EU_SETTLEMENT&quot; if &quot;eu-settlement&quot; refund-type value passed in" duration="0"/>
        <testCase name="RefundComplaint refundType throws an error if invalid refund-type is passed" duration="0"/>
    </file>
    <file path="test/unit/lib/json-converters/staff-behaviour.spec.js">
        <testCase name="StaffBehaviourComplaint experience throws an error if invalid staff-behaviour is passed" duration="0"/>
        <testCase name="StaffBehaviourComplaint experience face-to-face which-centre returns vac location information if &quot;vac&quot; which-centre value passed in" duration="0"/>
        <testCase name="StaffBehaviourComplaint experience face-to-face which-centre returns ssc location information if &quot;ssc&quot; which-centre value passed in" duration="1"/>
        <testCase name="StaffBehaviourComplaint experience face-to-face which-centre returns ukvcas location information if &quot;ukvcas&quot; which-centre value passed in" duration="0"/>
        <testCase name="StaffBehaviourComplaint experience face-to-face which-centre throws an error if invalid which-centre is passed" duration="0"/>
        <testCase name="StaffBehaviourComplaint experience on-phone returns callDetails information" duration="0"/>
        <testCase name="StaffBehaviourComplaint experience in-letter returns experienceType &quot;LETTER_OR_EMAIL&quot;" duration="0"/>
    </file>
    <file path="test/unit/lib/json-converters/submitting-application.spec.js">
        <testCase name="SubmittingApplicationComplaint problemExperienced returns &quot;TECHNICAL_ISSUES&quot; if &quot;technical-issues&quot; immigration-application value passed in" duration="0"/>
        <testCase name="SubmittingApplicationComplaint problemExperienced returns &quot;GUIDANCE&quot; if &quot;guidance&quot; immigration-application value passed in" duration="0"/>
        <testCase name="SubmittingApplicationComplaint problemExperienced returns &quot;SOMETHING_ELSE&quot; if &quot;complain&quot; immigration-application value passed in" duration="1"/>
        <testCase name="SubmittingApplicationComplaint problemExperienced throws an error if invalid immigration-application is passed" duration="1"/>
    </file>
    <file path="test/unit/lib/utils.spec.js">
        <testCase name="utils #validateAgainstSchema returns true if the complaintData object fits the schema" duration="14"/>
        <testCase name="utils #validateAgainstSchema throws an error if the complaintData object does not fit the schema" duration="3"/>
        <testCase name="utils #sendToQueue calls create on the sqs producer with SQS parameters" duration="1"/>
        <testCase name="utils #sendToQueue calls send on sqs producer with a unique id and stringifyed complaint data" duration="1"/>
        <testCase name="utils #sendToQueue rejects if send fails" duration="0"/>
    </file>
</testExecutions>