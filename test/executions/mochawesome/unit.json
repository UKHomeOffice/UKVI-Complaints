{
  "stats": {
    "suites": 13,
    "tests": 27,
    "passes": 26,
    "pending": 0,
    "failures": 1,
    "start": "2021-03-18T17:03:13.810Z",
    "end": "2021-03-18T17:03:13.997Z",
    "duration": 187,
    "testsRegistered": 27,
    "passPercent": 96.29629629629629,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "53bdd07d-0ebe-4b7d-8e73-8efb556bce5d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c188a006-6c2c-4b82-ae02-33bf96bea8dc",
          "title": "Add to casework system",
          "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/behaviours/add-to-casework.spec.js",
          "file": "/test/unit/behaviours/add-to-casework.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "820c4751-8550-4cb4-94a0-8c048e891fea",
              "title": "#process",
              "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/behaviours/add-to-casework.spec.js",
              "file": "/test/unit/behaviours/add-to-casework.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"#process\"",
                  "fullTitle": "Add to casework system #process \"before each\" hook in \"#process\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.clock = date => sinon.useFakeTimers(new Date(date));\nthis.clock('2021-01-01');\nreq = {\n  sessionModel: {\n    attributes: {\n      'csrf-secret': 'pTuaXZfpEH4Hi2GwjNTEH4ej',\n      errors: null,\n      reason: 'immigration-application',\n      steps:\n      ['/reason',\n        '/immigration-application',\n        '/application-technical',\n        '/application-ref-numbers',\n        '/acting-as-agent',\n        '/who-representing',\n        '/agent-name',\n        '/agent-contact-details',\n        '/agent-representative-name',\n        '/agent-representative-dob',\n        '/agent-representative-nationality',\n        '/complaint-details'],\n      'immigration-application': 'technical-issues',\n      'who-representing': 'legal-rep',\n      'agent-name': 'mm',\n      'agent-email': 'test@test.com',\n      'agent-phone': '12435667889',\n      'agent-representative-name': 'pp',\n      'agent-representative-dob': '1980-02-02',\n      'agent-representative-nationality': 'Ukraine',\n      'complaint-details': 'test',\n      'where-applied-from': 'inside-uk',\n      'reference-numbers': 'gwf',\n      'gwf-reference': 'GWF012345678',\n      'ho-reference': '',\n      'ihs-reference': '',\n      'uan-reference': '',\n      'acting-as-agent': 'yes' },\n  }\n};\nAddToCasework = Behaviour(Base);\ntestInstance = new AddToCasework();",
                  "err": {},
                  "uuid": "35f61742-4917-48aa-bed6-3326d4aa17c2",
                  "parentUUID": "820c4751-8550-4cb4-94a0-8c048e891fea",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should add the complaintData to request",
                  "fullTitle": "Add to casework system #process It should add the complaintData to request",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "testInstance.process(req, res, () => {});\nconsole.log(req);\nconsole.log(req.form.complaintData);\n// expect(req.form.complaintData).to.deep.equal({\n//   creationDate\n// });",
                  "err": {
                    "message": "TypeError: Cannot read property 'complaintData' of undefined",
                    "estack": "TypeError: Cannot read property 'complaintData' of undefined\n    at Context.it (test/unit/behaviours/add-to-casework.spec.js:66:28)\n    at process.topLevelDomainCallback (domain.js:121:23)",
                    "diff": null
                  },
                  "uuid": "867b88a9-c27e-4386-b3b3-a3765a112e67",
                  "parentUUID": "820c4751-8550-4cb4-94a0-8c048e891fea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "867b88a9-c27e-4386-b3b3-a3765a112e67"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "df802e90-d278-4e5f-b5f5-22c5508c39dc",
          "title": "Complaint",
          "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
          "file": "/test/unit/lib/json-converters/complaint.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Complaint\"",
              "fullTitle": "Complaint \"before each\" hook in \"Complaint\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const momentStub = sinon.stub().returns({\n      format: () => (creationDate)\n    });\n    Complaint = proxyquire('../../../../apps/ukvi-complaints/lib/json-converters/complaint', {\n      'moment': momentStub\n    });",
              "err": {},
              "uuid": "720cfc9b-b120-4e54-8149-e71c3b19c257",
              "parentUUID": "df802e90-d278-4e5f-b5f5-22c5508c39dc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have property complaintAttributes which is an object",
              "fullTitle": "Complaint Should have property complaintAttributes which is an object",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "complaint = new Complaint(applicantTestValues);\nexpect(complaint.complaintAttributes).to.be.an('object');",
              "err": {},
              "uuid": "eea06418-7866-4797-a8de-bdd0a461969d",
              "parentUUID": "df802e90-d278-4e5f-b5f5-22c5508c39dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b2c7dbc7-e480-49b4-b9d6-16d71a7f6d03",
              "title": "complaintAttributes",
              "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
              "file": "/test/unit/lib/json-converters/complaint.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should have creationDate set",
                  "fullTitle": "Complaint complaintAttributes Should have creationDate set",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "complaint = new Complaint(applicantTestValues);\nexpect(complaint.complaintAttributes.creationDate).to.eql(creationDate);",
                  "err": {},
                  "uuid": "4aca486e-db30-4f4e-b99e-ac10f6a36254",
                  "parentUUID": "b2c7dbc7-e480-49b4-b9d6-16d71a7f6d03",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "ca2641a5-0a76-449a-9e19-9eb80c01e881",
                  "title": "reporterDetails",
                  "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
                  "file": "/test/unit/lib/json-converters/complaint.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "e88a1dc7-3bf0-43b4-81d7-a70e99538004",
                      "title": "applicant",
                      "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
                      "file": "/test/unit/lib/json-converters/complaint.spec.js",
                      "beforeHooks": [
                        {
                          "title": "\"before each\" hook in \"applicant\"",
                          "fullTitle": "Complaint complaintAttributes reporterDetails applicant \"before each\" hook in \"applicant\"",
                          "timedOut": false,
                          "duration": 0,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "reporterDetailsValues = Object.assign({}, applicantTestValues);",
                          "err": {},
                          "uuid": "67d2ea32-2891-487b-bf37-2b01f6eb6cb7",
                          "parentUUID": "e88a1dc7-3bf0-43b4-81d7-a70e99538004",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "Should return applicant details without phone number if not included",
                          "fullTitle": "Complaint complaintAttributes reporterDetails applicant Should return applicant details without phone number if not included",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "complaint = new Complaint(reporterDetailsValues);\nexpect(complaint.complaintAttributes.complaint.reporterDetails).to.eql({\n  applicantType: applicantTypeApplicant,\n  applicantName: testApplicantName,\n  applicantNationality: testApplicantNationality,\n  applicantDob: testApplicantDob,\n  applicantEmail: testApplicantEmail,\n});",
                          "err": {},
                          "uuid": "8fee9bd2-3a86-470a-8091-4955752b8c2f",
                          "parentUUID": "e88a1dc7-3bf0-43b4-81d7-a70e99538004",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Should return applicant details with phone number if included",
                          "fullTitle": "Complaint complaintAttributes reporterDetails applicant Should return applicant details with phone number if included",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "reporterDetailsValues['applicant-phone'] = testApplicantPhone;\ncomplaint = new Complaint(reporterDetailsValues);\nexpect(complaint.complaintAttributes.complaint.reporterDetails).to.eql({\n  applicantType: applicantTypeApplicant,\n  applicantName: testApplicantName,\n  applicantNationality: testApplicantNationality,\n  applicantDob: testApplicantDob,\n  applicantEmail: testApplicantEmail,\n  applicantPhone: testApplicantPhone,\n});",
                          "err": {},
                          "uuid": "1ff50a37-3a98-42b6-86a9-7b5275d94b88",
                          "parentUUID": "e88a1dc7-3bf0-43b4-81d7-a70e99538004",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "8fee9bd2-3a86-470a-8091-4955752b8c2f",
                        "1ff50a37-3a98-42b6-86a9-7b5275d94b88"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                      "title": "agent",
                      "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
                      "file": "/test/unit/lib/json-converters/complaint.spec.js",
                      "beforeHooks": [
                        {
                          "title": "\"before each\" hook in \"agent\"",
                          "fullTitle": "Complaint complaintAttributes reporterDetails agent \"before each\" hook in \"agent\"",
                          "timedOut": false,
                          "duration": 0,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "agentValues = Object.assign({}, agentTestValues);",
                          "err": {},
                          "uuid": "52ad204b-18c8-49ee-833b-b7a118fcef68",
                          "parentUUID": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "it should return agent and applicant details with agentType RELATIVE",
                          "fullTitle": "Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType RELATIVE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "agentValues['who-representing'] = 'relative';\ncomplaint = new Complaint(agentValues);\nexpect(complaint.complaintAttributes.complaint.reporterDetails).to.eql({\n  applicantType: applicantTypeAgent,\n  applicantDetails: {\n    applicantName: testApplicantName,\n    applicantNationality: testApplicantNationality,\n    applicantDob: testApplicantDob,\n  },\n  agentDetails: {\n    agentName: testAgentName,\n    agentType: 'RELATIVE',\n    agentEmail: testAgentEmail\n  }\n});",
                          "err": {},
                          "uuid": "dbb9f0ba-8bf7-4fca-830c-664cd885e188",
                          "parentUUID": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "it should return agent and applicant details with agentType LEGAL_REP",
                          "fullTitle": "Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType LEGAL_REP",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "agentValues['who-representing'] = 'legal-rep';\ncomplaint = new Complaint(agentValues);\nexpect(complaint.complaintAttributes.complaint.reporterDetails).to.eql({\n  applicantType: applicantTypeAgent,\n  applicantDetails: {\n    applicantName: testApplicantName,\n    applicantNationality: testApplicantNationality,\n    applicantDob: testApplicantDob,\n  },\n  agentDetails: {\n    agentName: testAgentName,\n    agentType: 'LEGAL_REP',\n    agentEmail: testAgentEmail\n  }\n});",
                          "err": {},
                          "uuid": "e06c69c8-3ffc-4729-8a99-bea842074824",
                          "parentUUID": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "it should return agent and applicant details with agentType SPONSOR",
                          "fullTitle": "Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType SPONSOR",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "agentValues['who-representing'] = 'sponsor';\ncomplaint = new Complaint(agentValues);\nexpect(complaint.complaintAttributes.complaint.reporterDetails).to.eql({\n  applicantType: applicantTypeAgent,\n  applicantDetails: {\n    applicantName: testApplicantName,\n    applicantNationality: testApplicantNationality,\n    applicantDob: testApplicantDob,\n  },\n  agentDetails: {\n    agentName: testAgentName,\n    agentType: 'SPONSOR',\n    agentEmail: testAgentEmail\n  }\n});",
                          "err": {},
                          "uuid": "c9e7ee30-864b-4d95-ad66-bab3de760228",
                          "parentUUID": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "it should return agent and applicant details with agentType SUPPORT_ORG",
                          "fullTitle": "Complaint complaintAttributes reporterDetails agent it should return agent and applicant details with agentType SUPPORT_ORG",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "agentValues['who-representing'] = 'support-org';\ncomplaint = new Complaint(agentValues);\nexpect(complaint.complaintAttributes.complaint.reporterDetails).to.eql({\n  applicantType: applicantTypeAgent,\n  applicantDetails: {\n    applicantName: testApplicantName,\n    applicantNationality: testApplicantNationality,\n    applicantDob: testApplicantDob,\n  },\n  agentDetails: {\n    agentName: testAgentName,\n    agentType: 'SUPPORT_ORG',\n    agentEmail: testAgentEmail\n  }\n});",
                          "err": {},
                          "uuid": "17e2be9a-c74c-4349-84ff-a1e9176c5b43",
                          "parentUUID": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Should return agent details with phone number if included",
                          "fullTitle": "Complaint complaintAttributes reporterDetails agent Should return agent details with phone number if included",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "agentValues['agent-phone'] = testAgentPhone;\nagentValues['who-representing'] = 'relative';\ncomplaint = new Complaint(agentValues);\nexpect(complaint.complaintAttributes.complaint.reporterDetails).to.eql({\n  applicantType: applicantTypeAgent,\n  applicantDetails: {\n    applicantName: testApplicantName,\n    applicantNationality: testApplicantNationality,\n    applicantDob: testApplicantDob,\n  },\n  agentDetails: {\n    agentName: testAgentName,\n    agentType: 'RELATIVE',\n    agentEmail: testAgentEmail,\n    agentPhone: testAgentPhone,\n  }\n});",
                          "err": {},
                          "uuid": "523d3a1b-97e7-4982-814e-a9a89a85c642",
                          "parentUUID": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should throw error if incorrect who-representing type specified",
                          "fullTitle": "Complaint complaintAttributes reporterDetails agent should throw error if incorrect who-representing type specified",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "agentValues['who-representing'] = 'error-agent';\nexpect(() => new Complaint(agentValues)).to.throw('invalid \"who-representing\" value');",
                          "err": {},
                          "uuid": "461a42fc-5b4b-47cf-abc5-88b6bd67edb6",
                          "parentUUID": "f135d5ef-e6a4-4a5b-b44a-0d8f096f6d35",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "dbb9f0ba-8bf7-4fca-830c-664cd885e188",
                        "e06c69c8-3ffc-4729-8a99-bea842074824",
                        "c9e7ee30-864b-4d95-ad66-bab3de760228",
                        "17e2be9a-c74c-4349-84ff-a1e9176c5b43",
                        "523d3a1b-97e7-4982-814e-a9a89a85c642",
                        "461a42fc-5b4b-47cf-abc5-88b6bd67edb6"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 2,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "c151be87-5d84-49bc-812b-9606c3b90098",
                  "title": "reference",
                  "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
                  "file": "/test/unit/lib/json-converters/complaint.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"reference\"",
                      "fullTitle": "Complaint complaintAttributes reference \"before each\" hook in \"reference\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "referenceValues = Object.assign({}, applicantTestValues);",
                      "err": {},
                      "uuid": "daa02a32-cafa-4827-a1dc-a8b2d1b1b498",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Does not include a reference if reference-number is not present",
                      "fullTitle": "Complaint complaintAttributes reference Does not include a reference if reference-number is not present",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "complaint = new Complaint(referenceValues);\nexpect(complaint.complaintAttributes.complaint).to.not.have.all.keys('reference');",
                      "err": {},
                      "uuid": "a3f113a8-4127-4afc-aa1b-1add5ed56549",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Does not include a reference if reference-numbers is specified as \"none\"",
                      "fullTitle": "Complaint complaintAttributes reference Does not include a reference if reference-numbers is specified as \"none\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "referenceValues['reference-numbers'] = 'none';\ncomplaint = new Complaint(referenceValues);\nexpect(complaint.complaintAttributes.complaint).to.not.have.all.keys('reference');",
                      "err": {},
                      "uuid": "0a1c18c4-aa6c-4e70-899e-0d55722d5eb9",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "If \"gwf\" reference, reference number will be set on GWF_REF",
                      "fullTitle": "Complaint complaintAttributes reference If \"gwf\" reference, reference number will be set on GWF_REF",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "referenceValues['reference-numbers'] = 'gwf';\nreferenceValues['gwf-reference'] = testGwfRef;\ncomplaint = new Complaint(referenceValues);\nexpect(complaint.complaintAttributes.complaint.reference).to.eql({\n  referenceType: 'GWF_REF',\n  reference: testGwfRef\n});",
                      "err": {},
                      "uuid": "e28d9c40-8f3f-497a-9e54-9171b66e4d1e",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "If \"ho\" reference, reference number will be set on HO_REF",
                      "fullTitle": "Complaint complaintAttributes reference If \"ho\" reference, reference number will be set on HO_REF",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "referenceValues['reference-numbers'] = 'ho';\nreferenceValues['ho-reference'] = testHoRef;\ncomplaint = new Complaint(referenceValues);\nexpect(complaint.complaintAttributes.complaint.reference).to.eql({\n  referenceType: 'HO_REF',\n  reference: testHoRef\n});",
                      "err": {},
                      "uuid": "57442512-ccf9-4ab4-b20b-83d8fe21b8a7",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "If \"ihs\" reference, reference number will be set on IHS_REF",
                      "fullTitle": "Complaint complaintAttributes reference If \"ihs\" reference, reference number will be set on IHS_REF",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "referenceValues['reference-numbers'] = 'ihs';\nreferenceValues['ihs-reference'] = testIhsRef;\ncomplaint = new Complaint(referenceValues);\nexpect(complaint.complaintAttributes.complaint.reference).to.eql({\n  referenceType: 'IHS_REF',\n  reference: testIhsRef\n});",
                      "err": {},
                      "uuid": "03ebf78a-c091-4de2-80b9-e5dfca6deb6c",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "If \"uan\" reference, reference number will be set on UAN_REF",
                      "fullTitle": "Complaint complaintAttributes reference If \"uan\" reference, reference number will be set on UAN_REF",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "referenceValues['reference-numbers'] = 'uan';\nreferenceValues['uan-reference'] = testUanRef;\ncomplaint = new Complaint(referenceValues);\nexpect(complaint.complaintAttributes.complaint.reference).to.eql({\n  referenceType: 'UAN_REF',\n  reference: testUanRef\n});",
                      "err": {},
                      "uuid": "db8fa646-f03d-40d2-8f9b-8bb4ce3a8c2e",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should throw error if incorrect ref type specified",
                      "fullTitle": "Complaint complaintAttributes reference should throw error if incorrect ref type specified",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "referenceValues['reference-numbers'] = 'fff';\nexpect(() => new Complaint(referenceValues)).to.throw('invalid \"reference-numbers\" value');",
                      "err": {},
                      "uuid": "053bc920-869d-4542-be1f-939940acfa1f",
                      "parentUUID": "c151be87-5d84-49bc-812b-9606c3b90098",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a3f113a8-4127-4afc-aa1b-1add5ed56549",
                    "0a1c18c4-aa6c-4e70-899e-0d55722d5eb9",
                    "e28d9c40-8f3f-497a-9e54-9171b66e4d1e",
                    "57442512-ccf9-4ab4-b20b-83d8fe21b8a7",
                    "03ebf78a-c091-4de2-80b9-e5dfca6deb6c",
                    "db8fa646-f03d-40d2-8f9b-8bb4ce3a8c2e",
                    "053bc920-869d-4542-be1f-939940acfa1f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "a2c75688-9e4b-456f-97e1-08363e343a73",
                  "title": "complaintDetails",
                  "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
                  "file": "/test/unit/lib/json-converters/complaint.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "0d997843-1b5a-473c-a7a1-8175943e5d37",
                      "title": "applicationLocation",
                      "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/json-converters/complaint.spec.js",
                      "file": "/test/unit/lib/json-converters/complaint.spec.js",
                      "beforeHooks": [
                        {
                          "title": "\"before each\" hook in \"applicationLocation\"",
                          "fullTitle": "Complaint complaintAttributes complaintDetails applicationLocation \"before each\" hook in \"applicationLocation\"",
                          "timedOut": false,
                          "duration": 0,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "applicationLocationValues = Object.assign({}, applicantTestValues);",
                          "err": {},
                          "uuid": "91b4fb6c-e6d7-4feb-810f-3bb6418a02de",
                          "parentUUID": "0d997843-1b5a-473c-a7a1-8175943e5d37",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "If no location provided, applicationLocation is not set",
                          "fullTitle": "Complaint complaintAttributes complaintDetails applicationLocation If no location provided, applicationLocation is not set",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "complaint = new Complaint(applicationLocationValues);\nexpect(complaint.complaintAttributes.complaint.complaintDetails).to.not.have.all.keys('applicationLocation');",
                          "err": {},
                          "uuid": "90ad20f4-08b3-4bb3-bd6c-c11a8429db2d",
                          "parentUUID": "0d997843-1b5a-473c-a7a1-8175943e5d37",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "If applied from \"inside-uk\", applicationLocation set to INSIDE_UK",
                          "fullTitle": "Complaint complaintAttributes complaintDetails applicationLocation If applied from \"inside-uk\", applicationLocation set to INSIDE_UK",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "applicationLocationValues['where-applied-from'] = 'inside-uk';\ncomplaint = new Complaint(applicationLocationValues);\nexpect(complaint.complaintAttributes.complaint.complaintDetails.applicationLocation).to.eql('INSIDE_UK');",
                          "err": {},
                          "uuid": "ec7e31a6-d975-4c85-8d9c-8474d18a1c59",
                          "parentUUID": "0d997843-1b5a-473c-a7a1-8175943e5d37",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "If applied from \"outside-uk\", applicationLocation set to OUTSIDE_UK",
                          "fullTitle": "Complaint complaintAttributes complaintDetails applicationLocation If applied from \"outside-uk\", applicationLocation set to OUTSIDE_UK",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "applicationLocationValues['where-applied-from'] = 'outside-uk';\ncomplaint = new Complaint(applicationLocationValues);\nexpect(complaint.complaintAttributes.complaint.complaintDetails.applicationLocation).to.eql('OUTSIDE_UK');",
                          "err": {},
                          "uuid": "fbe2d52c-8c56-402b-9eb9-ef0724fd8c97",
                          "parentUUID": "0d997843-1b5a-473c-a7a1-8175943e5d37",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "It throws an error if invalid \"where-applied-from\"",
                          "fullTitle": "Complaint complaintAttributes complaintDetails applicationLocation It throws an error if invalid \"where-applied-from\"",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "applicationLocationValues['where-applied-from'] = 'location';\nexpect(() => new Complaint(applicationLocationValues)).to.throw('invalid \"where-applied-from\" value');",
                          "err": {},
                          "uuid": "089f05ac-601a-4ba3-aa90-b2db1130e81c",
                          "parentUUID": "0d997843-1b5a-473c-a7a1-8175943e5d37",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "90ad20f4-08b3-4bb3-bd6c-c11a8429db2d",
                        "ec7e31a6-d975-4c85-8d9c-8474d18a1c59",
                        "fbe2d52c-8c56-402b-9eb9-ef0724fd8c97",
                        "089f05ac-601a-4ba3-aa90-b2db1130e81c"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "4aca486e-db30-4f4e-b99e-ac10f6a36254"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "eea06418-7866-4797-a8de-bdd0a461969d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ff9fbab-55e6-4ba2-b708-42605fc74f5c",
          "title": "utils",
          "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/utils.spec.js",
          "file": "/test/unit/lib/utils.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"utils\"",
              "fullTitle": "utils \"before each\" hook in \"utils\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "uuidStub = sinon.stub().returns(testUuid);\nsendStub = sinon.stub().resolves();\nsendStub.withArgs({\n  id: testUuid,\n  body: JSON.stringify(invalidComplaintData)\n}).rejects();\ncreateSub = sinon.stub().returns({\n  send: sendStub\n});\nutils = proxyquire('../../../apps/ukvi-complaints/lib/utils', {\n  'sqs-producer': {\n    Producer: {\n      create: createSub\n    }\n  },\n  'uuid': {\n    v4: uuidStub\n  }\n});",
              "err": {},
              "uuid": "9c64ed5f-6bfe-4a17-9be2-89ecd046ceb4",
              "parentUUID": "1ff9fbab-55e6-4ba2-b708-42605fc74f5c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"utils\"",
              "fullTitle": "utils \"after each\" hook in \"utils\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sinon.restore();",
              "err": {},
              "uuid": "062ed307-0611-4a4c-9ddb-ff3381136d59",
              "parentUUID": "1ff9fbab-55e6-4ba2-b708-42605fc74f5c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "06f08a37-06e8-4ed7-b2bd-8e4a8ae9b751",
              "title": "#validateAgainstSchema",
              "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/utils.spec.js",
              "file": "/test/unit/lib/utils.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the complaintData object fits the schema",
                  "fullTitle": "utils #validateAgainstSchema returns true if the complaintData object fits the schema",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(utils.validateAgainstSchema(validComplaintData)).to.eql(true);",
                  "err": {},
                  "uuid": "45b2df2f-1811-4d97-adb9-b9f8ed205b43",
                  "parentUUID": "06f08a37-06e8-4ed7-b2bd-8e4a8ae9b751",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an error if the complaintData object does not fit the schema",
                  "fullTitle": "utils #validateAgainstSchema throws an error if the complaintData object does not fit the schema",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(() => utils.validateAgainstSchema(invalidComplaintData)).to.throw();",
                  "err": {},
                  "uuid": "75804426-d195-45df-8b64-7954b26196ea",
                  "parentUUID": "06f08a37-06e8-4ed7-b2bd-8e4a8ae9b751",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45b2df2f-1811-4d97-adb9-b9f8ed205b43",
                "75804426-d195-45df-8b64-7954b26196ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f0edd310-e5d2-405a-b0bf-aea72998e4ea",
              "title": "#sendToQueue",
              "fullFile": "/Users/JosephCoker/Projects/Home-Office/HOF/ukvi-complaints/test/unit/lib/utils.spec.js",
              "file": "/test/unit/lib/utils.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calls create on the sqs producer with SQS parameters",
                  "fullTitle": "utils #sendToQueue calls create on the sqs producer with SQS parameters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "utils.sendToQueue(validComplaintData);\nexpect(createSub).to.have.been.calledOnceWith({\n  queueUrl: 'http://localhost:4566/000000000000/local-queue',\n  region: 'eu-west-2'\n});",
                  "err": {},
                  "uuid": "2b680c1d-797c-4deb-a769-34789a1a0ab2",
                  "parentUUID": "f0edd310-e5d2-405a-b0bf-aea72998e4ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "calls send on sqs producer with a unique id and stringifyed complaint data",
                  "fullTitle": "utils #sendToQueue calls send on sqs producer with a unique id and stringifyed complaint data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "utils.sendToQueue(validComplaintData);\nexpect(sendStub).to.have.been.calledOnceWith(\n  [\n    {\n      id: testUuid,\n      body: JSON.stringify(validComplaintData)\n    }\n  ]\n);",
                  "err": {},
                  "uuid": "a9f49d0b-e8b7-4690-9119-d245af2d63a2",
                  "parentUUID": "f0edd310-e5d2-405a-b0bf-aea72998e4ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "rejects an error if send fails",
                  "fullTitle": "utils #sendToQueue rejects an error if send fails",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// eslint-disable-next-line no-unused-expressions\nexpect(utils.sendToQueue(invalidComplaintData)).to.be.rejected;",
                  "err": {},
                  "uuid": "c65bf870-0e65-441b-9c37-c06bec52832c",
                  "parentUUID": "f0edd310-e5d2-405a-b0bf-aea72998e4ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b680c1d-797c-4deb-a769-34789a1a0ab2",
                "a9f49d0b-e8b7-4690-9119-d245af2d63a2",
                "c65bf870-0e65-441b-9c37-c06bec52832c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "unit",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "none",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "none",
        "reportDir": "test/executions/mochawesome",
        "reportFilename": "unit"
      },
      "version": "5.2.0"
    }
  }
}